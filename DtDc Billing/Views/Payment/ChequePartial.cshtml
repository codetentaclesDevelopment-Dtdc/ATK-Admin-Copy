@model DtDc_Billing.Entity_FR.Cheque

@using (Ajax.BeginForm("Cheque", "Payment", new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "ChequeP", OnSuccess = "createsuccess" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    
    <hr />
    @Html.ValidationMessage("InvAmt", new { @class = "text-danger" })
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <label class="col-md-4">Amount</label>
        <div class="col-md-8">
            @Html.EditorFor(model => model.C_Amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.C_Amount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-4">Tds Amount</label>
        <div class="col-md-8">
            @Html.EditorFor(model => model.Tds_amount, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tds_amount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-4">Date</label>
        <div class="col-md-8">
            @Html.EditorFor(model => model.tempch_date, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tempch_date, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-4">Bank Name</label>
        <div class="col-md-8">
            @Html.EditorFor(model => model.bank_name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.bank_name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-4">Branch Name </label>
        <div class="col-md-8">
            @Html.EditorFor(model => model.branch_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.branch_Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-4">Total Amt</label>
        <div class="col-md-8">
            @Html.EditorFor(model => model.totalAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.totalAmount, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-md-4">Invoice No</label>
        <div class="col-md-8">
            @Html.EditorFor(model => model.Invoiceno, new { htmlAttributes = new { @class = "form-control Invoiceno", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Invoiceno, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-12">
            <input type="submit" value="Save" class="btn btn-success pull-right " />
        </div>
    </div>
</div>
}

<script>

    function createsuccess(data) {
        if (data.RedirectUrl)
            window.location.href = data.RedirectUrl;
    }

    $(document).ready(function () {

        $("#C_Amount,#Tds_amount").keyup(function () {

            var C_Amount = $('#C_Amount').val();

            var Tds_amount = $('#Tds_amount').val();


            var addition=  (parseFloat("0" + C_Amount) + parseFloat("0" + Tds_amount));

            $('#totalAmount').val(addition);

        });

    });
</script>
